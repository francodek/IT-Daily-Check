@model PaginatedList<IT_Daily_Check.Models.DailyCheck>
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

@{
    ViewData["Title"] = "Daily Checks";
}

<h1>Daily Check List</h1>

<div style="display:flex;">
    <p>
        <a asp-action="Create" style="margin-right:30px" class="fas fa-info-circle btn btn-success btn-sm active">Create New Daily Check</a>
    </p>

    <p>
        <a asp-action="GetCurrentDayCheck" style="margin-right:30px" class="fas fa-info-circle btn btn-info btn-sm active">Get Current Day Checks</a>
    </p>

    <form class="form-inline" asp-controller="DailyChecks" asp-action="GetDailyCheckForSelectedDate">
        <div style="display:flex">
            <label class="control-label" style="margin-right:20px">Date:</label>
            <input type="date" value="" class="form-control" name="date" id="date" style="margin-right:10px" />            
            <input type="submit" value="Get" asp-action="GetDailyCheckForSelectedDate" asp-controller="DailyChecks" class="btn btn-primary" style="margin-right:10px" />
        </div>       
    </form>
</div>


<table class="table">
    <thead>
        <tr>
            <th>
                Name
            </th>
            <th>
                Date_Created
            </th>
            <th>
                Location
            </th>
            <th>
                Created_By
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Date_Created)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Location)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Created_By)
            </td>
                @if (SignInManager.IsSignedIn(User))
                {
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id" class="fas fa-info-circle btn btn-primary btn-sm active">Edit</a>
                        <a asp-action="Details" asp-route-id="@item.Id" class="fas fa-info-circle btn btn-info btn-sm active">Details</a>
                        <a asp-action="ExportToPdf" asp-route-id="@item.Id" class="fas fa-info-circle btn btn-outline-success btn-sm active">Export As Pdf</a>
                        <a asp-action="Delete" asp-route-id="@item.Id" class="fas fa-info-circle btn btn-danger btn-sm active">Delete</a>
                    </td>
                }
                else
                {
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id" class="fas fa-info-circle btn btn-primary btn-sm active">Edit</a>
                        <a asp-action="Details" asp-route-id="@item.Id" class="fas fa-info-circle btn btn-info btn-sm active">Details</a>                        
                        <a asp-action="Delete" asp-route-id="@item.Id" class="fas fa-info-circle btn btn-danger btn-sm active">Delete</a>
                    </td>
                }
                
        </tr>
}
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}



<style>
    .custom-prev-button {
        background-color: #007bff;
        color: #fff;
    }

    .custom-next-button {
        background-color: #28a745;
        color: #fff;
    }
</style>

<div class="pagination-container">
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex - 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn custom-prev-button @prevDisabled">
        Previous
    </a>
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex + 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn custom-next-button @nextDisabled">
        Next
    </a>
</div>







<!--<a href="/"> @{
    //var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
   // var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   class="btn btn-default @nextDisabled">
    Next
</a> </a> -->
